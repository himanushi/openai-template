/* eslint-disable @typescript-eslint/ban-types */
import { JSX as LocalJSX } from '@ionic/core';

type CamelToKebabCase<S extends string> = S extends `${infer T}${infer U}`
	? `${T extends Capitalize<T> ? '-' : ''}${Lowercase<T>}${CamelToKebabCase<U>}`
	: S;

type CamelToKebab<T extends object> = {
	[K in keyof T as `${CamelToKebabCase<string & K>}`]: T[K] extends object
		? CamelToKebab<T[K]>
		: T[K];
};

type IonicAllEventNames =
	| 'onDidDismiss'
	| 'onDidPresent'
	| 'onIonActionSheetDidDismiss'
	| 'onIonActionSheetDidPresent'
	| 'onIonActionSheetWillDismiss'
	| 'onIonActionSheetWillPresent'
	| 'onIonAlertDidDismiss'
	| 'onIonAlertDidPresent'
	| 'onIonAlertWillDismiss'
	| 'onIonAlertWillPresent'
	| 'onIonBackdropTap'
	| 'onIonBlur'
	| 'onIonBreakpointDidChange'
	| 'onIonCancel'
	| 'onIonChange'
	| 'onIonClear'
	| 'onIonCollapsedClick'
	| 'onIonDidClose'
	| 'onIonDidOpen'
	| 'onIonDismiss'
	| 'onIonDrag'
	| 'onIonError'
	| 'onIonFocus'
	| 'onIonImgDidLoad'
	| 'onIonImgWillLoad'
	| 'onIonInfinite'
	| 'onIonInput'
	| 'onIonInputModeChange'
	| 'onIonItemReorder'
	| 'onIonKnobMoveEnd'
	| 'onIonKnobMoveStart'
	| 'onIonLoadingDidDismiss'
	| 'onIonLoadingDidPresent'
	| 'onIonLoadingWillDismiss'
	| 'onIonLoadingWillPresent'
	| 'onIonModalDidDismiss'
	| 'onIonModalDidPresent'
	| 'onIonModalWillDismiss'
	| 'onIonModalWillPresent'
	| 'onIonNavDidChange'
	| 'onIonNavWillChange'
	| 'onIonPickerDidDismiss'
	| 'onIonPickerDidPresent'
	| 'onIonPickerWillDismiss'
	| 'onIonPickerWillPresent'
	| 'onIonPopoverDidDismiss'
	| 'onIonPopoverDidPresent'
	| 'onIonPopoverWillDismiss'
	| 'onIonPopoverWillPresent'
	| 'onIonPull'
	| 'onIonRefresh'
	| 'onIonRouteDataChanged'
	| 'onIonRouteDidChange'
	| 'onIonRouteRedirectChanged'
	| 'onIonRouteWillChange'
	| 'onIonScroll'
	| 'onIonScrollEnd'
	| 'onIonScrollStart'
	| 'onIonSlideDidChange'
	| 'onIonSlideDoubleTap'
	| 'onIonSlideDrag'
	| 'onIonSlideNextEnd'
	| 'onIonSlideNextStart'
	| 'onIonSlidePrevEnd'
	| 'onIonSlidePrevStart'
	| 'onIonSlideReachEnd'
	| 'onIonSlideReachStart'
	| 'onIonSlideTap'
	| 'onIonSlideTouchEnd'
	| 'onIonSlideTouchStart'
	| 'onIonSlideTransitionEnd'
	| 'onIonSlideTransitionStart'
	| 'onIonSlideWillChange'
	| 'onIonSlidesDidLoad'
	| 'onIonSplitPaneVisible'
	| 'onIonStart'
	| 'onIonSwipe'
	| 'onIonTabsDidChange'
	| 'onIonTabsWillChange'
	| 'onIonToastDidDismiss'
	| 'onIonToastDidPresent'
	| 'onIonToastWillDismiss'
	| 'onIonToastWillPresent'
	| 'onIonWillClose'
	| 'onIonWillOpen'
	| 'onWillDismiss'
	| 'onWillPresent';

type IgnoreUnknown<T> = T extends Function ? T : never;

type ConvertIonicEvents<T extends {}> = Partial<{
	ondidDismiss: IgnoreUnknown<T['onDidDismiss']>;
	ondidPresent: IgnoreUnknown<T['onDidPresent']>;
	onionActionSheetDidDismiss: IgnoreUnknown<T['onIonActionSheetDidDismiss']>;
	onionActionSheetDidPresent: IgnoreUnknown<T['onIonActionSheetDidPresent']>;
	onionActionSheetWillDismiss: IgnoreUnknown<T['onIonActionSheetWillDismiss']>;
	onionActionSheetWillPresent: IgnoreUnknown<T['onIonActionSheetWillPresent']>;
	onionAlertDidDismiss: IgnoreUnknown<T['onIonAlertDidDismiss']>;
	onionAlertDidPresent: IgnoreUnknown<T['onIonAlertDidPresent']>;
	onionAlertWillDismiss: IgnoreUnknown<T['onIonAlertWillDismiss']>;
	onionAlertWillPresent: IgnoreUnknown<T['onIonAlertWillPresent']>;
	onionBackdropTap: IgnoreUnknown<T['onIonBackdropTap']>;
	onionBlur: IgnoreUnknown<T['onIonBlur']>;
	onionBreakpointDidChange: IgnoreUnknown<T['onIonBreakpointDidChange']>;
	onionCancel: IgnoreUnknown<T['onIonCancel']>;
	onionChange: IgnoreUnknown<T['onIonChange']>;
	onionClear: IgnoreUnknown<T['onIonClear']>;
	onionCollapsedClick: IgnoreUnknown<T['onIonCollapsedClick']>;
	onionDidClose: IgnoreUnknown<T['onIonDidClose']>;
	onionDidOpen: IgnoreUnknown<T['onIonDidOpen']>;
	onionDismiss: IgnoreUnknown<T['onIonDismiss']>;
	onionDrag: IgnoreUnknown<T['onIonDrag']>;
	onionError: IgnoreUnknown<T['onIonError']>;
	onionFocus: IgnoreUnknown<T['onIonFocus']>;
	onionImgDidLoad: IgnoreUnknown<T['onIonImgDidLoad']>;
	onionImgWillLoad: IgnoreUnknown<T['onIonImgWillLoad']>;
	onionInfinite: IgnoreUnknown<T['onIonInfinite']>;
	onionInput: IgnoreUnknown<T['onIonInput']>;
	onionInputModeChange: IgnoreUnknown<T['onIonInputModeChange']>;
	onionItemReorder: IgnoreUnknown<T['onIonItemReorder']>;
	onionKnobMoveEnd: IgnoreUnknown<T['onIonKnobMoveEnd']>;
	onionKnobMoveStart: IgnoreUnknown<T['onIonKnobMoveStart']>;
	onionLoadingDidDismiss: IgnoreUnknown<T['onIonLoadingDidDismiss']>;
	onionLoadingDidPresent: IgnoreUnknown<T['onIonLoadingDidPresent']>;
	onionLoadingWillDismiss: IgnoreUnknown<T['onIonLoadingWillDismiss']>;
	onionLoadingWillPresent: IgnoreUnknown<T['onIonLoadingWillPresent']>;
	onionModalDidDismiss: IgnoreUnknown<T['onIonModalDidDismiss']>;
	onionModalDidPresent: IgnoreUnknown<T['onIonModalDidPresent']>;
	onionModalWillDismiss: IgnoreUnknown<T['onIonModalWillDismiss']>;
	onionModalWillPresent: IgnoreUnknown<T['onIonModalWillPresent']>;
	onionNavDidChange: IgnoreUnknown<T['onIonNavDidChange']>;
	onionNavWillChange: IgnoreUnknown<T['onIonNavWillChange']>;
	onionPickerDidDismiss: IgnoreUnknown<T['onIonPickerDidDismiss']>;
	onionPickerDidPresent: IgnoreUnknown<T['onIonPickerDidPresent']>;
	onionPickerWillDismiss: IgnoreUnknown<T['onIonPickerWillDismiss']>;
	onionPickerWillPresent: IgnoreUnknown<T['onIonPickerWillPresent']>;
	onionPopoverDidDismiss: IgnoreUnknown<T['onIonPopoverDidDismiss']>;
	onionPopoverDidPresent: IgnoreUnknown<T['onIonPopoverDidPresent']>;
	onionPopoverWillDismiss: IgnoreUnknown<T['onIonPopoverWillDismiss']>;
	onionPopoverWillPresent: IgnoreUnknown<T['onIonPopoverWillPresent']>;
	onionPull: IgnoreUnknown<T['onIonPull']>;
	onionRefresh: IgnoreUnknown<T['onIonRefresh']>;
	onionRouteDataChanged: IgnoreUnknown<T['onIonRouteDataChanged']>;
	onionRouteDidChange: IgnoreUnknown<T['onIonRouteDidChange']>;
	onionRouteRedirectChanged: IgnoreUnknown<T['onIonRouteRedirectChanged']>;
	onionRouteWillChange: IgnoreUnknown<T['onIonRouteWillChange']>;
	onionScroll: IgnoreUnknown<T['onIonScroll']>;
	onionScrollEnd: IgnoreUnknown<T['onIonScrollEnd']>;
	onionScrollStart: IgnoreUnknown<T['onIonScrollStart']>;
	onionSlideDidChange: IgnoreUnknown<T['onIonSlideDidChange']>;
	onionSlideDoubleTap: IgnoreUnknown<T['onIonSlideDoubleTap']>;
	onionSlideDrag: IgnoreUnknown<T['onIonSlideDrag']>;
	onionSlideNextEnd: IgnoreUnknown<T['onIonSlideNextEnd']>;
	onionSlideNextStart: IgnoreUnknown<T['onIonSlideNextStart']>;
	onionSlidePrevEnd: IgnoreUnknown<T['onIonSlidePrevEnd']>;
	onionSlidePrevStart: IgnoreUnknown<T['onIonSlidePrevStart']>;
	onionSlideReachEnd: IgnoreUnknown<T['onIonSlideReachEnd']>;
	onionSlideReachStart: IgnoreUnknown<T['onIonSlideReachStart']>;
	onionSlideTap: IgnoreUnknown<T['onIonSlideTap']>;
	onionSlideTouchEnd: IgnoreUnknown<T['onIonSlideTouchEnd']>;
	onionSlideTouchStart: IgnoreUnknown<T['onIonSlideTouchStart']>;
	onionSlideTransitionEnd: IgnoreUnknown<T['onIonSlideTransitionEnd']>;
	onionSlideTransitionStart: IgnoreUnknown<T['onIonSlideTransitionStart']>;
	onionSlideWillChange: IgnoreUnknown<T['onIonSlideWillChange']>;
	onionSlidesDidLoad: IgnoreUnknown<T['onIonSlidesDidLoad']>;
	onionSplitPaneVisible: IgnoreUnknown<T['onIonSplitPaneVisible']>;
	onionStart: IgnoreUnknown<T['onIonStart']>;
	onionSwipe: IgnoreUnknown<T['onIonSwipe']>;
	onionTabsDidChange: IgnoreUnknown<T['onIonTabsDidChange']>;
	onionTabsWillChange: IgnoreUnknown<T['onIonTabsWillChange']>;
	onionToastDidDismiss: IgnoreUnknown<T['onIonToastDidDismiss']>;
	onionToastDidPresent: IgnoreUnknown<T['onIonToastDidPresent']>;
	onionToastWillDismiss: IgnoreUnknown<T['onIonToastWillDismiss']>;
	onionToastWillPresent: IgnoreUnknown<T['onIonToastWillPresent']>;
	onionWillClose: IgnoreUnknown<T['onIonWillClose']>;
	onionWillOpen: IgnoreUnknown<T['onIonWillOpen']>;
	onwillDismiss: IgnoreUnknown<T['onWillDismiss']>;
	onwillPresent: IgnoreUnknown<T['onWillPresent']>;
}>;

declare global {
	declare namespace svelte.JSX {
		type SvelteIonic<T> = ConvertIonicEvents<T> &
			CamelToKebab<Omit<T, IonicAllEventNames>> &
			Omit<svelte.JSX.HTMLProps<HTMLElement>, keyof T>;

		interface IntrinsicElements {
			'ion-accordion': SvelteIonic<LocalJSX.IonAccordion>;
			'ion-accordion-group': SvelteIonic<LocalJSX.IonAccordionGroup>;
			'ion-action-sheet': SvelteIonic<LocalJSX.IonActionSheet>;
			'ion-alert': SvelteIonic<LocalJSX.IonAlert>;
			'ion-app': SvelteIonic<LocalJSX.IonApp>;
			'ion-avatar': SvelteIonic<LocalJSX.IonAvatar>;
			'ion-back-button': SvelteIonic<LocalJSX.IonBackButton>;
			'ion-backdrop': SvelteIonic<LocalJSX.IonBackdrop>;
			'ion-badge': SvelteIonic<LocalJSX.IonBadge>;
			'ion-breadcrumb': SvelteIonic<LocalJSX.IonBreadcrumb>;
			'ion-breadcrumbs': SvelteIonic<LocalJSX.IonBreadcrumbs>;
			'ion-button': SvelteIonic<LocalJSX.IonButton>;
			'ion-buttons': SvelteIonic<LocalJSX.IonButtons>;
			'ion-card': SvelteIonic<LocalJSX.IonCard>;
			'ion-card-content': SvelteIonic<LocalJSX.IonCardContent>;
			'ion-card-header': SvelteIonic<LocalJSX.IonCardHeader>;
			'ion-card-subtitle': SvelteIonic<LocalJSX.IonCardSubtitle>;
			'ion-card-title': SvelteIonic<LocalJSX.IonCardTitle>;
			'ion-checkbox': SvelteIonic<LocalJSX.IonCheckbox>;
			'ion-chip': SvelteIonic<LocalJSX.IonChip>;
			'ion-col': SvelteIonic<LocalJSX.IonCol>;
			'ion-content': SvelteIonic<LocalJSX.IonContent>;
			'ion-datetime': SvelteIonic<LocalJSX.IonDatetime>;
			'ion-fab': SvelteIonic<LocalJSX.IonFab>;
			'ion-fab-button': SvelteIonic<LocalJSX.IonFabButton>;
			'ion-fab-list': SvelteIonic<LocalJSX.IonFabList>;
			'ion-footer': SvelteIonic<LocalJSX.IonFooter>;
			'ion-grid': SvelteIonic<LocalJSX.IonGrid>;
			'ion-header': SvelteIonic<LocalJSX.IonHeader>;
			'ion-icon': SvelteIonic<LocalJSX.IonIcon>;
			'ion-img': SvelteIonic<LocalJSX.IonImg>;
			'ion-infinite-scroll': SvelteIonic<LocalJSX.IonInfiniteScroll>;
			'ion-infinite-scroll-content': SvelteIonic<LocalJSX.IonInfiniteScrollContent>;
			'ion-input': SvelteIonic<LocalJSX.IonInput>;
			'ion-item': SvelteIonic<LocalJSX.IonItem>;
			'ion-item-divider': SvelteIonic<LocalJSX.IonItemDivider>;
			'ion-item-group': SvelteIonic<LocalJSX.IonItemGroup>;
			'ion-item-option': SvelteIonic<LocalJSX.IonItemOption>;
			'ion-item-options': SvelteIonic<LocalJSX.IonItemOptions>;
			'ion-item-sliding': SvelteIonic<LocalJSX.IonItemSliding>;
			'ion-label': SvelteIonic<LocalJSX.IonLabel>;
			'ion-list': SvelteIonic<LocalJSX.IonList>;
			'ion-list-header': SvelteIonic<LocalJSX.IonListHeader>;
			'ion-loading': SvelteIonic<LocalJSX.IonLoading>;
			'ion-menu': SvelteIonic<LocalJSX.IonMenu>;
			'ion-menu-button': SvelteIonic<LocalJSX.IonMenuButton>;
			'ion-menu-toggle': SvelteIonic<LocalJSX.IonMenuToggle>;
			'ion-modal': SvelteIonic<LocalJSX.IonModal>;
			'ion-nav': SvelteIonic<LocalJSX.IonNav>;
			'ion-nav-link': SvelteIonic<LocalJSX.IonNavLink>;
			'ion-note': SvelteIonic<LocalJSX.IonNote>;
			'ion-picker': SvelteIonic<LocalJSX.IonPicker>;
			'ion-picker-column': SvelteIonic<LocalJSX.IonPickerColumn>;
			'ion-picker-column-internal': SvelteIonic<LocalJSX.IonPickerColumnInternal>;
			'ion-picker-internal': SvelteIonic<LocalJSX.IonPickerInternal>;
			'ion-popover': SvelteIonic<LocalJSX.IonPopover>;
			'ion-progress-bar': SvelteIonic<LocalJSX.IonProgressBar>;
			'ion-radio': SvelteIonic<LocalJSX.IonRadio>;
			'ion-radio-group': SvelteIonic<LocalJSX.IonRadioGroup>;
			'ion-range': SvelteIonic<LocalJSX.IonRange>;
			'ion-refresher': SvelteIonic<LocalJSX.IonRefresher>;
			'ion-refresher-content': SvelteIonic<LocalJSX.IonRefresherContent>;
			'ion-reorder': SvelteIonic<LocalJSX.IonReorder>;
			'ion-reorder-group': SvelteIonic<LocalJSX.IonReorderGroup>;
			'ion-ripple-effect': SvelteIonic<LocalJSX.IonRippleEffect>;
			'ion-route': SvelteIonic<LocalJSX.IonRoute>;
			'ion-route-redirect': SvelteIonic<LocalJSX.IonRouteRedirect>;
			'ion-router': SvelteIonic<LocalJSX.IonRouter>;
			'ion-router-link': SvelteIonic<LocalJSX.IonRouterLink>;
			'ion-router-outlet': SvelteIonic<LocalJSX.IonRouterOutlet>;
			'ion-row': SvelteIonic<LocalJSX.IonRow>;
			'ion-searchbar': SvelteIonic<LocalJSX.IonSearchbar>;
			'ion-segment': SvelteIonic<LocalJSX.IonSegment>;
			'ion-segment-button': SvelteIonic<LocalJSX.IonSegmentButton>;
			'ion-select': SvelteIonic<LocalJSX.IonSelect>;
			'ion-select-option': SvelteIonic<LocalJSX.IonSelectOption>;
			'ion-select-popover': SvelteIonic<LocalJSX.IonSelectPopover>;
			'ion-skeleton-text': SvelteIonic<LocalJSX.IonSkeletonText>;
			'ion-slide': SvelteIonic<LocalJSX.IonSlide>;
			'ion-slides': SvelteIonic<LocalJSX.IonSlides>;
			'ion-spinner': SvelteIonic<LocalJSX.IonSpinner>;
			'ion-split-pane': SvelteIonic<LocalJSX.IonSplitPane>;
			'ion-tab': SvelteIonic<LocalJSX.IonTab>;
			'ion-tab-bar': SvelteIonic<LocalJSX.IonTabBar>;
			'ion-tab-button': SvelteIonic<LocalJSX.IonTabButton>;
			'ion-tabs': SvelteIonic<LocalJSX.IonTabs>;
			'ion-text': SvelteIonic<LocalJSX.IonText>;
			'ion-textarea': SvelteIonic<LocalJSX.IonTextarea>;
			'ion-thumbnail': SvelteIonic<LocalJSX.IonThumbnail>;
			'ion-title': SvelteIonic<LocalJSX.IonTitle>;
			'ion-toast': SvelteIonic<LocalJSX.IonToast>;
			'ion-toggle': SvelteIonic<LocalJSX.IonToggle>;
			'ion-toolbar': SvelteIonic<LocalJSX.IonToolbar>;
			'ion-virtual-scroll': SvelteIonic<LocalJSX.IonVirtualScroll>;
		}
	}
}
